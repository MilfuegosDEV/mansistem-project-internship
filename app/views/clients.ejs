<h1 class="mt-4">Clientes</h1>
<ol class="breadcrumb mb-4">
  <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
  <li class="breadcrumb-item active">Clientes</li>
</ol>
<div class="card mb-4">
  <div class="card-header">
    <i class="fa-solid fa-building-user me-1"></i>
    Clientes
  </div>
  <div class="card-body">
    <table
      id="DataTable"
      class="display responsive table table-hover wrap w-100 fs-6"
    ></table>
  </div>
</div>
<%- include('partials/errorRowModal.ejs') %> <%- contentFor('styles') %> <%-
contentFor('scripts') %>
<!--Datatables-->
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/select/1.7.0/js/dataTables.select.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
<script nonce="<%=cspNonce%>">
  function showEditModal(form, data) {
    const selectedProvince = $("#editProvinces option")
      .filter(function () {
        return $(this).text().trim() === data.province_name;
      })
      .val();

    const selectedStatus = $("#editStatus option")
      .filter(function () {
        return $(this).text().trim() === data.status;
      })
      .val();

    $("#clientId").val(data.id);
    $("#editInputName").val(data.name);
    $("#editInputPhone").val(data.phone);
    $("#editInputEmail").val(data.email);
    $("#editInputAddress").val(data.address).trigger("input");
    $("#editProvinces").val(selectedProvince);
    $("#editStatus").val(selectedStatus);
    $("#editarModal").modal("show");
  }
</script>
<script nonce="<%= cspNonce %>">
  $(document).ready(function () {
    const table = datatableConfig(
      "#DataTable",
      "/api/clients",
      [
        { title: "Id", data: "id", visible: false },
        { title: "Cliente", data: "name" },
        { title: "Teléfono", data: "phone" },
        { title: "Correo", data: "email" },
        { title: "Dirección", data: "address" }, // Ajusta el ancho de la columna de dirección al 30% del contenedor
        { title: "Provincia", data: "province_name", width: "5%" },
        {
          title: "Estado",
          data: "status",
          render: function (data) {
            if (data === "HABILITADO") {
              return `<span class="badge bg-success">Habilitado</span>`;
            }
            return `<span class="badge bg-danger">Inhabilitado</span>`;
          },
          width: "5%",
        },
      ],
      [
        {
          targets: [1, 2, 3, 5, 6],
          className: "text-nowrap",
        },
      ]
    );
  });
</script>
<script nonce="<%= cspNonce %>">
  document.addEventListener("DOMContentLoaded", () => {
    const registerForm = document.getElementById("registerForm");
    const editForm = document.getElementById("editForm");

    const setupForm = (modal, form, messageBox, url) => {
      messageBox.innerHTML = "";
      const validateForm = () => {
        const errors = [];
        const data = Object.fromEntries(new FormData(form).entries());

        // Check for empty fields
        for (const key in data) {
          if (!data[key].trim()) {
            errors.push(`El campo ${key} es requerido.`);
          }
        }
        if (!/^[0-9]*$/.test(data.phone)) {
          errors.push("El campo teléfono no admite caracteres no númericos");
        }
        return errors;
      };

      const displayErrors = (errors) => {
        messageBox.innerHTML = errors
          .map(
            (error) =>
              `<div class="alert alert-danger mb-1 py-1"><strong>¡Error!</strong> ${error}</div>`
          )
          .join("");
      };

      form.addEventListener("submit", async (event) => {
        event.preventDefault();
        const errors = validateForm();
        if (errors.length > 0) {
          displayErrors(errors);
          return;
        }

        const data = Object.fromEntries(new FormData(form).entries());
        messageBox.innerHTML = "";

        try {
          const response = await fetch(url, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });

          const result = await response.json();

          if (!response.ok) {
            displayErrors([result.error]);
          } else {
            messageBox.innerHTML = `<div class="alert alert-success mb-1 py-1"><strong>¡Hecho!</strong> ${result.success}</div>`;
            recargarTabla();
            setTimeout(() => {
              messageBox.innerHTML = "";
              form.reset();
              $(`#${modal}`).modal("hide");
            }, 1000);
          }
        } catch (error) {
          console.error(error);
          displayErrors(["Ocurrió un error al enviar el formulario"]);
        }
      });
    };
    const crearModal = "crearModal";
    const registerMessageBox = document.getElementById("messageBox");
    setupForm(crearModal, registerForm, registerMessageBox, "/addClient");
    const editarModal = "editarModal";
    const editMessageBox = document.getElementById("editMessageBox");
    setupForm(editarModal, editForm, editMessageBox, "/editClient");
  });
</script>
